name: Build

on:
  push:
    tags:
      - '**'
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        ports:
        - ${{ secrets.TEST_POSTGRES_OUTER_PORT }}:${{ secrets.TEST_POSTGRES_INNER_PORT }}
      redis:
        image: redis:latest
        ports:
        - ${{ secrets.TEST_REDIS_OUTER_PORT }}:${{ secrets.TEST_REDIS_INNER_PORT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          submodules: recursive

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Git Submodule Update
        run: |
          git submodule update --remote --recursive
          
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Build with Gradle
        id: buildWithGradle
        run: ./gradlew clean build
        shell: bash

      - name: Upload Report Artifact When Build Failed
        if: ${{ failure() && steps.buildWithGradle.conclusion == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: report-artifact
          path: ./build/reports
          compression-level: 9
          retention-days: 1
          overwrite: true
        
      - name: Move *.jar File
        run: |
          mkdir content
          mv ./build/libs/*.jar ./content/

      - name: Extract .jar File
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: |
            ./content/*.jar
